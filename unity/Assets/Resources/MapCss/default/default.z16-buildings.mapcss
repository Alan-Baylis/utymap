relation|z16[type=building] {
    clip: false;
    builders: building;
}

area,relation|z16[building],
area,relation|z16[building:levels],
area,relation|z16[building:shape],
area,relation|z16[building:part] {
    clip: false;
    builders: building;

    height: 12m;
    min-height: 0m;

    facade-color: gradient(#c0c0c0, #a9a9a9 50%, #808080);
    facade-type: flat;

    roof-color: gradient(red);
    roof-type: flat;
    roof-height: 0m;
}

area,relation|z16[building:levels] {
    height: eval("tag('building:levels') * 3.2");
    levels: eval("tag('building:levels')");
}

area,relation|z16[height] {
    height: eval("tag('height')");
}
area,relation|z16[building:height] {
    height: eval("tag('building:height')");
}
area,relation|z16[building:height][roof:height] {
    height: eval("tag('building:height') - tag('roof:height')");
}

area,relation|z16[building:min_height] {
    min-height: eval("tag('building:min_height')");
}
area,relation|z16[min_height] {
    min-height: eval("tag('min_height')");
}

area,relation|z16[roof:height] {
    roof-height: eval("tag('roof:height')");
}

area,relation|z16[roof:shape=dome] {
    roof-type: dome;
}
area,relation|z16[roof:shape=pyramidal] {
    roof-type: pyramidal;
}
area,relation|z16[roof:shape=mansard] {
    roof-type: mansard;
}

area,relation|z16[building:shape=cylinder] {
    roof-type: none;
    facade-type: cylinder;
}
area,relation|z16[building:shape=sphere] {
    roof-type: none;
    facade-type: sphere;
}
