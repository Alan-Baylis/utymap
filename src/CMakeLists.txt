set(HEADER_FILES
                ${LIB_SOURCE}/clipper/clipper.hpp
                ${LIB_SOURCE}/hashing/MurmurHash3.h
                ${LIB_SOURCE}/triangle/triangle.h
                ${LIB_SOURCE}/shapefile/shapefil.h
                BoundingBox.hpp
                Exceptions.hpp
                GeoCoordinate.hpp
                QuadKey.hpp
                builders/BuilderContext.hpp
                builders/ElementBuilder.hpp
                builders/ExternalBuilder.hpp
                builders/TileBuilder.hpp
                builders/terrain/LineGridSplitter.hpp
                builders/terrain/TerraBuilder.hpp
                builders/buildings/LowPolyBuildingBuilder.hpp
                builders/buildings/facades/LowPolyWallBuilder.hpp
                builders/buildings/roofs/LowPolyRoofBuilder.hpp
                builders/buildings/roofs/RoofBuilder.hpp
                entities/Element.hpp
                entities/ElementVisitor.hpp
                entities/Node.hpp
                entities/Relation.hpp
                entities/Way.hpp
                entities/Area.hpp
                formats/FormatTypes.hpp
                formats/osm/MultipolygonProcessor.hpp
                formats/osm/OsmDataVisitor.hpp
                formats/osm/pbf/fileformat.pb.h
                formats/osm/pbf/osmformat.pb.h
                formats/osm/pbf/OsmPbfParser.hpp
                formats/osm/xml/OsmXmlParser.hpp
                formats/shape/ShapeParser.hpp
                formats/shape/ShapeDataVisitor.hpp
                heightmap/ElevationProvider.hpp
                heightmap/FlatElevationProvider.hpp
                index/GeoStore.hpp
                index/ElementStore.hpp
                index/InMemoryElementStore.hpp
                index/LodRange.hpp
                index/PersistentElementStore.hpp
                index/StringTable.hpp
                mapcss/Color.hpp
                mapcss/ColorGradient.hpp
                mapcss/MapCssParser.hpp
                mapcss/StyleSheet.hpp
                mapcss/Style.hpp
                mapcss/StyleProvider.hpp
                meshing/MeshBuilder.hpp
                meshing/MeshTypes.hpp
                meshing/Polygon.hpp
                utils/CompatibilityUtils.hpp
                utils/CoreUtils.hpp
                utils/ElementUtils.hpp
                utils/GeoUtils.hpp
                utils/GradientUtils.hpp
                utils/MapCssUtils.hpp
                utils/NoiseUtils.hpp
                utils/SvgBuilder.hpp
                )

add_library (UtyMap
                ${HEADER_FILES}
                ${LIB_SOURCE}/clipper/clipper.cpp
                ${LIB_SOURCE}/hashing/MurmurHash3.cpp
                ${LIB_SOURCE}/triangle/triangle.c
                ${LIB_SOURCE}/shapefile/dbfopen.c
                ${LIB_SOURCE}/shapefile/safileio.c
                ${LIB_SOURCE}/shapefile/shpopen.c
                builders/terrain/TerraBuilder.cpp
                builders/TileBuilder.cpp
                builders/buildings/LowPolyBuildingBuilder.cpp
                formats/osm/MultipolygonProcessor.cpp
                formats/osm/pbf/fileformat.pb.cc
                formats/osm/pbf/osmformat.pb.cc
                formats/osm/OsmDataVisitor.cpp
                index/ElementStore.cpp
                index/GeoStore.cpp
                index/InMemoryElementStore.cpp
                index/PersistentElementStore.cpp
                index/StringTable.cpp
                mapcss/MapCssParser.cpp
                mapcss/StyleProvider.cpp
                mapcss/StyleSheet.cpp
                meshing/MeshBuilder.cpp
                utils/GradientUtils.cpp
                utils/NoiseUtils.cpp
                )

set_target_properties(UtyMap PROPERTIES LINKER_LANGUAGE CXX)

include_directories (${MAIN_SOURCE} ${LIB_SOURCE})
